{
 ;; TODO look at this https://github.com/seancorfield/dot-clojure
 ;; to think of maybe a better wrokflow?
 :mvn/repos {"sonatype" {:url "https://oss.sonatype.org/content/repositories/snapshots/"}
             "taxbit" {:url "https://taxbit-659132082063.d.codeartifact.us-east-1.amazonaws.com/maven/maven-store"}
             }
             ;; "ekata-snapshot" {:url "https://artifactory.util.pages/artifactory/libs-snapshot-local"}
 :aliases   {:local-dev

             {
              ;; :extra-paths ["/Users/kevinkrausse/Documents/repos/clojure/src/clj" "/Users/kevinkrausse/Documents/repos/tools.deps/src/main/clojure"]
              :extra-deps {
                           ;org.clojure/clojure {:mvn/version "1.10.2"}
                           ;com.taxbit/tax-engine-core {:mvn/version "1.1.174"}
                           ;; local dev version I have symlinked to ~/Documents/me/kev-nrepl
                           #_#_                                     kevonavin/kev-repl {:git/url "https://github.com/kevonavin/kev-nrepl.git"
                                                                                        :sha     "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"}

                           org.clojure/clojure                   {:mvn/version "1.12.0-alpha3"}
                           ;;;;;;;;;;;;;; local stuff ;;;;;;;;;;;;;;;;;;;;;;;

                           ;; just added source paths here
                           ;; maybe should just put in extra-paths, but say it deprecated?
                           ;; put ini clj-utils even? and then have only one weird dep here?
                           ;;
                           ;; git submodules for clojure repos under dotfiles
                           ;;
                           ;; interferes with clojure readers somehow?
                           ;;
                           ;; z ensures it is later on the classpath
                           ;; I guess this at least puts it on clojure-lsp's radar
                           zkev.local/clojure-src {:local/root "/Users/kevinkrausse/Documents/repos"}
                           kev/util {:local/root "/Users/kevinkrausse/Documents/taxbit/clj-utils"}

                           ;;;;;;;;;;;;;; end local stuff ;;;;;;;;;;;;;;;;;;;;;;;
                           org.clojure/core.async {:git/url "https://github.com/clojure/core.async"
                                                   :sha "ad5c0475346a0ef36e6a8623cc1d3c1b6439ef96"}
                           lambdaisland/deep-diff2                  {:mvn/version "2.0.108"}
                           ;;babashka/process                         {:mvn/version "0.0.1"}
                           ;;babashka/fs                              {:mvn/version "0.0.1"}
                           cheshire/cheshire                        {:mvn/version "5.10.0"}
                           org.clojure/data.csv                     {:mvn/version "1.0.0"}
                           http-kit/http-kit                        {:mvn/version "2.5.1"}
                           ;; include this pesky thing so there's no conflicts
                           #_#_edn-query-language/eql               {:git/url "https://github.dev.pages/services/eql.git"
                                                                     :sha     "3d7603fc632944b6f636459185a74c8e504dc45f"}
                           criterium/criterium                      {:mvn/version "0.4.6"}
                           vvvvalvalval/scope-capture               {:mvn/version "0.3.2"}
                           pjstadig/humane-test-output              {:mvn/version "0.11.0"}
                           ;; async profiler!
                           com.clojure-goes-fast/clj-async-profiler {:mvn/version "1.1.1"}
                           ;;#_#_
                           lambdaisland/classpath                   {:git/url "https://github.com/lambdaisland/classpath"
                                                                     :sha     "a0142d5ac2b1a390201fb8db245df7cacac692f2"}
                           djblue/portal {:mvn/version "0.42.0"}
                           ;; this needs to be commented out sometimes because it overrides an aws transient
                           ;; dep for vilhelmina that fucks everything up
                           ;;org.clojure/tools.deps.alpha {:mvn/version "0.12.1030"}
                           vlaaad/reveal                            {:mvn/version "1.3.276"}
                           cljfx/cljfx {:git/url "https://github.com/cljfx/cljfx" :sha "ddea0fe5e3eca5e8b53f435c43db407b10e37480"}
                           nrepl/nrepl                              {:mvn/version "1.0.0"}
                           cider/cider-nrepl                        {:mvn/version "0.28.6"}}
              :jvm-opts   ["-Xmx11g" "-Xss300m" "-XX:-OmitStackTraceInFastThrow"
                           ;; testing keystore
                           ;; "-Djavax.net.ssl.keyStore=/Users/kkrausse/Documents/ekata/services/network-signals/docker/certs/redislabs_user.p12"
                           ;; "-Djavax.net.ssl.keyStoreType=PKCS12"
                           ;; "-Djavax.net.ssl.keyStorePassword=bimjean"
                           ;; "-Djavax.net.debug=ssl"
                           ;; these three are for jvm profiling
                           "-Djdk.attach.allowAttachSelf"
                           "-XX:+UnlockDiagnosticVMOptions"
                           "-XX:+DebugNonSafepoints"]
			  ;; I kind of think that cider-middleware has to be last? bc some weird shit with an invisible cache was happening
              ;; removed vlaaad.reveal.nrepl/middleware bc I can just open it later
              :main-opts  ["-m" "nrepl.cmdline" "--middleware" "[cider.nrepl/cider-middleware]" "--interactive" "--color"]
              :main-opts1 ["-m" "nrepl.cmdline" "--middleware" "[cider.nrepl/cider-middleware]" "--interactive" "--color"]
              }
             :local-dev-services
             {:extra-deps {
                           ;;nrepl/nrepl {:mvn/version "0.6.0"}
                           ;; add-lib3 branch!
                           ;; org.clojure/tools.deps.alpha  ^:depot/ignore {:git/url "https://github.com/clojure/tools.deps.alpha.git"
                           ;;                                               :sha     "d77476f3d5f624249462e275ae62d26da89f320b"}
                           ;; org.clojure/tools.deps.alpha {:mvn/version "0.9.763"}
                           ;; this is og one - if getting read errors
                           org.clojure/tools.deps.alpha ^:depot/ignore {:git/url "https://github.com/clojure/tools.deps.alpha.git"
                                                                        :sha     "d492e97259c013ba401c5238842cd3445839d020"}
                           hashp/hashp                  {:mvn/version "0.2.0"} ; use #p reader to print stuff easier
                           criterium/criterium          {:mvn/version "0.4.6"} ; benchmarking thing
                           local-dev/local-dev          {:git/url   "https://github.dev.pages/services/clojure-local-dev"
                                                         :deps/root "jdk11plus" ;; if you use JDK11+, try to!
                                                         :sha       "8a254554943d1bee8a04e49d64e3daaeaffe4aa5"}
                           }
              ;; this the old one:
              ;; :main-opts  ["-m" "local-dev" "--host" "127.0.0.1" "--middleware" "[com.billpiel.sayid.nrepl-middleware/wrap-sayid,nrebl.middleware/wrap-nrebl,cider.nrepl/cider-middleware,refactor-nrepl.middleware/wrap-refactor]" "--interactive" "--color"]
              ;; this my new one which doesn't rely on the script, which I think is nice
              :main-opts  ["-e" "((requiring-resolve,'cognitect.rebl/ui))" "-m" "nrepl.cmdline" "--middleware" "[com.billpiel.sayid.nrepl-middleware/wrap-sayid,nrebl.middleware/wrap-nrebl,cider.nrepl/cider-middleware,refactor-nrepl.middleware/wrap-refactor]" "--interactive" "--color"]
              }
             :ig-viz     {:extra-deps {ekata/ig-viz {:git/url "https://github.dev.pages/pro-internal/ig-viz"
                                                     :sha     "84f57deb2e2c09c86a2addf83fc691213c446a42"}}
                          :main-opts  ["-m" "ig-viz"]}
;;;;;;;;;;;;;;;kevins stuff;;;;;;;;;;;;;;;;;;;;;;;;;;
             :local-dev2 {
                          :extra-deps {
                                       ;; installed in my local maven
                                       com.cognitect/rebl            {:mvn/version "0.9.242"}
                                       ;;vlaaad/remote-repl {:mvn/version "1.1"}
                                       ;;vlaaad/reveal {:mvn/version "1.2.186"}
                                       org.clojure/tools.deps.alpha  ^:depot/ignore {:git/url "https://github.com/clojure/tools.deps.alpha.git"
                                                                                     :sha     "d492e97259c013ba401c5238842cd3445839d020"}
                                       org.openjfx/javafx-fxml       {:mvn/version "15-ea+6"}
                                       org.openjfx/javafx-controls   {:mvn/version "15-ea+6"}
                                       org.openjfx/javafx-swing      {:mvn/version "15-ea+6"}
                                       org.openjfx/javafx-base       {:mvn/version "15-ea+6"}
                                       org.openjfx/javafx-web        {:mvn/version "15-ea+6"}
                                       nrepl/nrepl                   {:mvn/version "0.8.3"}
                                       com.billpiel/sayid            {:mvn/version "0.1.0"}
                                       refactor-nrepl/refactor-nrepl {:mvn/version "2.5.0"}
                                       cider/cider-nrepl             {:mvn/version "0.25.7"}
                                       }
                          ;; same as above, minus nrebl
                                        ;:main-opts ["-m" "nrepl.cmdline" "--middleware" "[com.billpiel.sayid.nrepl-middleware/wrap-sayid,cider.nrepl/cider-middleware,refactor-nrepl.middleware/wrap-refactor]" "--interactive" "--color"]
                          :main-opts  ["-e" "((requiring-resolve,'cognitect.rebl/ui))" "-m" "nrepl.cmdline" "--middleware" "[com.billpiel.sayid.nrepl-middleware/wrap-sayid,cider.nrepl/cider-middleware,refactor-nrepl.middleware/wrap-refactor]" "--interactive" "--color"]
                          }
             }
 }
